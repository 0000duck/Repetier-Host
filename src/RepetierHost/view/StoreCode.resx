<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>This save function is meant to generate G-code files that
can be run from a sd card. For that reason it can add the
start and end code along with the regular finish commands
like they are executed during a direct print from the host.
All comments and host commands get removed!
If you only want to save the G-code in your editor, use the
save icon there. </value>
  </data>
  <metadata name="saveFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAwAAAAcAAAAQAAAAFwICAi1+fn7EwsLC/7y8vP+8vLz/RUVFgwAAABoAAAAWAAAACwAA
        AAUAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAYAAAAQAAAAFwkJCTWRkZHhuLi4/1VVVZoAAAAZAAAAFgAA
        AAsAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAcAAAAQAAAADjY2NnCDg4PcAgICIAAA
        ABQAAAAMAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAgAAAAMCQkJISQk
        JEwAAAAJAAAACwAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAYAAAAHAAAABQAAAAcAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAgAAAAMAAAADAAAAAgAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gP//+AAP/+AAA//AAAD/gAAAfwAAAH8AAAB/AAAAfwAAAH8AAAD/AA
        AA/wAAAP8AAAB/AAAAfwAAAP8AAAD/AAAA/4AAAP+AAAD/gAAB/8AAAf/AAAP/4AAD//AAB//4AA///A
        Af//4AP///AH///4D////F////////////8=
</value>
  </data>
</root>